"""users table

Revision ID: deb33cbdaef4
Revises: 
Create Date: 2019-07-31 12:47:55.350797

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'deb33cbdaef4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cars')
    op.drop_table('colour')
    op.drop_table('gearbox')
    op.drop_table('engine_capacity')
    op.drop_table('model')
    op.create_unique_constraint(None, 'users', ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.create_table('model',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('model_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='model_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('engine_capacity',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('engine_capacity_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='engine_capacity_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('gearbox',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('gearbox_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='gearbox_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('colour',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('colour_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='colour_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('cars',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('model', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('colour', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gearbox', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('engine_capacity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['colour'], ['colour.id'], name='cars_colour_fkey'),
    sa.ForeignKeyConstraint(['engine_capacity'], ['engine_capacity.id'], name='cars_engine_capacity_fkey'),
    sa.ForeignKeyConstraint(['gearbox'], ['gearbox.id'], name='cars_gearbox_fkey'),
    sa.ForeignKeyConstraint(['model'], ['model.id'], name='cars_model_fkey'),
    sa.PrimaryKeyConstraint('id', name='cars_pkey')
    )
    # ### end Alembic commands ###
